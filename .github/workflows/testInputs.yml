name: Deploy Release Container

on:
  workflow_dispatch:
    inputs:
      AppId:
        description: 'PlanIT application ID number (ex. "4853")'
        required: true
        type: string
      VpcId:
        description: 'VPC to provision the pipeline'
        required: true
        type: string
      RepositoryName:
        description: 'GitHub Enterprise repository name (ex. "HIG/ds_mlops_core_dags")'
        required: true
        type: string
      BranchName:
        description: 'GitHub Enterprise branch name'
        required: true
        type: string
      ReleaseName:
        description: 'Release Name Of Astro Deployment'
        required: true
        type: string
      AirflowVersion:
        description: 'Version tag of Airflow (ex. 2.4.3-2)'
        required: true
        type: string
      AirflowRepo:
        description: 'Airflow repository name'
        required: true
        type: string
      AWSAccountId:
        description: 'AWS Account ID (for authorization checks)'
        required: true
        type: string

jobs:
  validate-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Validate Inputs
        run: |
          required_inputs=("AppId" "VpcId" "RepositoryName" "BranchName" "ReleaseName" "AirflowVersion" "AirflowRepo" "AWSAccountId")

          for var in "${required_inputs[@]}"; do
            value="${{ github.event.inputs[$var] }}"
            if [[ -z "$value" ]]; then
              echo "$var is required"; exit 1
            fi
          done

      - name: Validate Account Authorization
        run: |
          AWS_ACCOUNT_ID="${{ github.event.inputs.AWSAccountId }}"
          RELEASE_NAME="${{ github.event.inputs.ReleaseName }}"
          
          # List of allowed AWS accounts
          ALLOWED_ACCOUNTS=("923397148186" "102443476650" "817209399767" "252898585127" "805528740914" "063345380468" "844127575310" "902854700762")
          
          if [[ ! " ${ALLOWED_ACCOUNTS[@]} " =~ " ${AWS_ACCOUNT_ID} " ]]; then
            echo "AWS Account $AWS_ACCOUNT_ID is not authorized for container builds"; exit 1
          fi

          # Define allowed release names per account
          declare -A ALLOWED_RELEASES
          ALLOWED_RELEASES["252898585127"]="claims-dsc claims-preprod claims-prod"
          ALLOWED_RELEASES["805528740914"]="pl-dsc pl-preprod pl-prod"
          ALLOWED_RELEASES["063345380468"]="mlc-discovery mlc-preprod mlc-prod"
          ALLOWED_RELEASES["844127575310"]="sc-discovery sc-preprod sc-prod"
          ALLOWED_RELEASES["902854700762"]="ilab-discovery cmra-discovery cmra-prod ulm-discovery ulm-prod"
          ALLOWED_RELEASES["923397148186"]="gb-discovery gb-preprod gb-prod"
          ALLOWED_RELEASES["102443476650"]="gs-discovery gs-preprod gs-prod"

          # Validate release name
          if [[ -n "${ALLOWED_RELEASES[$AWS_ACCOUNT_ID]}" ]]; then
            if [[ ! " ${ALLOWED_RELEASES[$AWS_ACCOUNT_ID]} " =~ " ${RELEASE_NAME} " ]]; then
              echo "AWS Account $AWS_ACCOUNT_ID is not authorized for release name: $RELEASE_NAME"; exit 1
            fi
          fi

      - name: Print Validated Inputs
        run: |
          echo "All inputs are valid"
          echo "AppId: ${{ github.event.inputs.AppId }}"
          echo "VpcId: ${{ github.event.inputs.VpcId }}"
          echo "RepositoryName: ${{ github.event.inputs.RepositoryName }}"
          echo "BranchName: ${{ github.event.inputs.BranchName }}"
          echo "ReleaseName: ${{ github.event.inputs.ReleaseName }}"
          echo "AirflowVersion: ${{ github.event.inputs.AirflowVersion }}"
          echo "AirflowRepo: ${{ github.event.inputs.AirflowRepo }}"
          echo "AWS Account ID: ${{ github.event.inputs.AWSAccountId }}"
